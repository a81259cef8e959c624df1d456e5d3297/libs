name: CI Workflow

on:
  # Triggers the workflow on push to the main branch
  push:
#    branches: [main]
  # Manual trigger for the workflow
#  workflow_dispatch:
  # External event trigger
#  repository_dispatch:
  # Scheduled trigger: Executes every 3 days at 01:00
#  schedule:
#    - cron: "0 1 */3 * *"

permissions:
  # Grant write permissions for content
  contents: write

# Allow cancellation of in-progress runs for the same group
concurrency:
  group: "${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}"
  cancel-in-progress: true

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      # Step 1: Build xhide
      - name: Build xhide
        run: |
          tmp_dir=$(mktemp -d)
          mkdir -p upload
          if wget -nv -O "$tmp_dir/xhide.c" "https://raw.githubusercontent.com/knightmare2600/d4rkc0de/836843911d7291adf4ec2468d075007d04c6dd64/c0de/c/xhide.txt"; then
            gcc "$tmp_dir/xhide.c" -Os -o upload/xhide
          fi
          echo "TAG_NAME=$(date +"%Y.%m.%d")" >> $GITHUB_ENV

      # Step 2: Create and upload a release with a timestamp tag
      - name: Upload Release ${{ env.TAG_NAME }}
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.TAG_NAME }}
          body: "Commit SHA: ${{ github.sha }}"
          files: |
            upload/*

      # Step 3: Create and upload a release tagged as "latest"
      - name: Upload Latest Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          draft: false
          prerelease: false
          generate_release_notes: true
          tag_name: latest
          body: "Commit SHA: ${{ github.sha }}"
          files: |
            upload/*

      # Step 4: Remove old releases, retaining the latest 5
      - name: Cleanup Old Releases
        uses: dev-drprasad/delete-older-releases@v0.2.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          keep_latest: 5
          delete_tags: true